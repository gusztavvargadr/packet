parameters:
  stages: []
    # - name: stage-name
    #   displayName: stage-display-name
    #   containerRegistry: container-registry-name
    #   samples:
    #     - name: [ sample-name-part-1, sample-name-part-2, ... ]

stages:
  - ${{ each stage in parameters.stages }}:
    - stage: ${{ stage.name }}
      displayName: ${{ stage.displayName }}

      variables:
        - group: stage-${{ stage.name }}

      jobs:
        - ${{ each sample in stage.samples }}:
          - job: test_${{ join('_', sample.name) }}
            displayName: Test ${{ join('-', sample.name) }}

            pool:
              vmImage: ubuntu-16.04

            workspace:
              clean: all

            steps:
              - checkout: self
                submodules: recursive

              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: build-${{ join('-', sample.name) }}-registry
                  path: $(Build.SourcesDirectory)/.registry/
                displayName: Artifacts Registry Download

              - script: |
                  dotnet --info

                  echo "##vso[task.setvariable variable=PATH;]$PATH:~/.dotnet/tools"
                  dotnet tool install Cake.Tool --global --version 0.33.0

                  dotnet tool list --global
                displayName: .NET Init

              - task: Docker@2
                inputs:
                  command: login
                  containerRegistry: ${{ stage.containerRegistry }}
                displayName: Docker Login
                condition: and(succeeded(), ne(variables['docker-registry-publish'], ''))

              - script: |
                  dotnet cake deploy.cake --target=publish
                displayName: Cake Publish
                env:
                  SAMPLE_NAME: ${{ join('-', sample.name) }}
                  PACKET_AUTH_TOKEN: $(packet-auth-token)
                  DOCKER_REGISTRY_PUBLISH: $(docker-registry-publish)

              - script: |
                  dotnet cake deploy.cake --target=clean
                env:
                  SAMPLE_NAME: ${{ join('-', sample.name) }}
                  PACKET_AUTH_TOKEN: $(packet-auth-token)
                  DOCKER_REGISTRY_PUBLISH: $(docker-registry-publish)
                displayName: Cake Clean
                condition: always()

              - task: Docker@2
                inputs:
                  command: logout
                  containerRegistry: ${{ stage.containerRegistry }}
                displayName: Docker Logout
                condition: ne(variables['docker-registry-publish'], '')
